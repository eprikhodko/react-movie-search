{"version":3,"sources":["SearchMovies.js","MovieDetails.js","App.js","index.js"],"names":["SearchMovies","movies","searchMovies","query","handleChange","movieCards","filter","movie","poster_path","map","className","to","id","src","alt","title","release_date","slice","overview","onSubmit","htmlFor","type","name","placeholder","value","onChange","MovieDetails","params","useParams","movieId","parseInt","history","useHistory","useState","setMovie","getMovieDetails","event","a","url","process","fetch","response","json","data","console","error","useEffect","style","backgroundImage","backdrop_path","original_title","onClick","goBack","Header","App","setQuery","setMovies","preventDefault","results","exact","path","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.719e0d54.chunk.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\n\nfunction SearchMovies({movies, searchMovies, query, handleChange}) {\n\n    const movieCards = movies.filter(movie => movie.poster_path).map(movie => (\n            <div className=\"movie-card\" key={movie.id}>\n                <Link to={`/${movie.id}`}>\n                    <img className=\"movie-card-image\"\n                        src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                        alt={movie.title + \" poster\"}\n                    />\n                </Link>\n                \n                <div className=\"movie-info\">\n                    <h2 className=\"movie-title\">\n                        <Link to={`/${movie.id}`}>{movie.title}</Link>\n                    </h2>\n                    <p className=\"release-date\">Release year: {movie.release_date.slice(0, 4)}</p>\n                    <p className=\"movie-overview\">{movie.overview}</p>\n                </div>\n            </div>\n        ))\n  \n    return (\n        <div className=\"container-search\">\n            <form className=\"form\" onSubmit={searchMovies}>\n                <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n                <input \n                    className=\"search-input\" \n                    type=\"text\" \n                    name=\"query\"\n                    placeholder=\"i.e. Star Wars\" \n                    value={query} \n                    onChange={handleChange}\n                />\n                <button className=\"button-search\" type=\"submit\">Search</button>\n            </form>\n\n            <div className=\"search-results\">\n                {movieCards}\n            </div>    \n        </div>\n    )\n}\n\nexport default SearchMovies","import React, {useState, useEffect} from \"react\"\nimport {useParams, useHistory} from \"react-router-dom\"\n\nimport \"./MovieDetails.css\"\n\nconst MY_KEY = process.env.REACT_APP_API_KEY\n\n\nfunction MovieDetails() {\n    const params = useParams()  \n    const movieId = parseInt(params.movieId)\n\n    const history = useHistory()\n    // console.log(history)\n\n    const [movie, setMovie] = useState([])\n\n    const getMovieDetails = async (event) => {\n\n        const url = `https://api.tmdb.org/3/movie/${movieId}?api_key=${MY_KEY}&language=en-US`;\n        \n        try {\n            const response = await fetch(url)\n            const data  = await response.json()\n            setMovie(data)\n        } catch(err) {\n            console.error(err)\n        }\n    }\n\n    useEffect(() => {\n        getMovieDetails()\n      }, []) \n\n      const handleClick = () => {history.goBack()}\n\n    return (\n        <div className=\"container-movie-details\">\n            \n            <div className=\"container-movie-backdrop\" style={{ \n            backgroundImage: `url(\"https://image.tmdb.org/t/p/w1000_and_h450_multi_faces${movie.backdrop_path}\")`\n          }}>\n\n                <img className=\"movie-poster\"\n                    src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                    alt={movie.title + \" poster\"}\n                />            \n            </div>\n            \n            \n            <div className=\"container-overview\">\n                <h2 className=\"title-movie-details\">{movie.original_title}</h2>\n                <h3 className=\"title-overview\">Overview</h3>\n                <p className=\"paragraph-overview\">{movie.overview}</p>\n                <button className=\"button-back\" type=\"button\" onClick={handleClick}>Back to search</button>\n            </div>\n            \n\n        </div>\n        \n\n    )\n}\n\nexport default MovieDetails","import React, {useState} from \"react\"\nimport SearchMovies from \"./SearchMovies\"\nimport MovieDetails from \"./MovieDetails\"\n\nimport {Switch, Route} from \"react-router-dom\"\n\nconst MY_KEY = process.env.REACT_APP_API_KEY\n\nfunction App() {\n\n    const [query, setQuery] = useState(\"\")\n    const [movies, setMovies] = useState([])\n\n    const handleChange = event => {\n        // console.log(event.target.value)\n        return setQuery(event.target.value)\n    }\n\n    // Search movies\n    const searchMovies = async (event) => {\n        // prevent page reload after clicking Search button\n        event.preventDefault();\n        \n        // check if search field is empty\n        if (query) {\n            const url = `https://api.tmdb.org/3/search/movie?api_key=${MY_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n        \n        try {\n            const response = await fetch(url);\n            const data  = await response.json();\n            setMovies(data.results);\n        } catch(err) {\n            console.error(err);\n        }\n\n        // clear search field after clicking Search button\n        setQuery(\"\")\n        }\n    }\n\n    return (\n        <div>\n            <Header />\n        \n            <Switch>\n                    <Route exact path=\"/\">\n                        <div className=\"container\">\n                            <SearchMovies \n                                handleChange={handleChange}\n                                query={query}\n                                searchMovies={searchMovies}\n                                movies={movies}\n                            />\n                        </div>\n                    </Route>\n                    <Route exact path={`/:movieId`}>\n                        <MovieDetails />\n                    </Route>\n            </Switch>\n        </div>\n    )\n}\n\nfunction Header() {\n    return (\n        <header>\n            <h1 className=\"title\">React Movie Search</h1>\n        </header>\n    )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {BrowserRouter as Router, HashRouter} from \"react-router-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById(\"root\"))\n\n\n"],"sourceRoot":""}