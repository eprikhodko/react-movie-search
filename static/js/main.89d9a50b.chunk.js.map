{"version":3,"sources":["Header.js","SearchMovies.js","MovieDetails.js","App.js","index.js"],"names":["Header","className","SearchMovies","movies","searchMovies","query","handleChange","movieCards","filter","movie","poster_path","map","to","id","src","alt","title","release_date","slice","overview","onSubmit","htmlFor","type","name","placeholder","value","onChange","MovieDetails","params","useParams","movieId","parseInt","history","useHistory","useState","setMovie","getMovieDetails","event","a","url","process","fetch","response","json","data","console","error","useEffect","style","backgroundImage","backdrop_path","original_title","onClick","goBack","App","setQuery","setMovies","preventDefault","results","exact","path","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89d9a50b.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Header = () => {\n    return (\n        <header>\n            <h1 className=\"site-title\">React Movie Search</h1>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nconst SearchMovies = ({movies, searchMovies, query, handleChange}) => {\n\n    const movieCards = movies.filter(movie => movie.poster_path).map(movie => (\n        <Link to={`/${movie.id}`}>\n            <div className=\"movie-card\" key={movie.id}>\n                \n                    <img className=\"movie-card-image\"\n                        src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                        alt={movie.title + \" poster\"}\n                    />\n                \n                <div className=\"movie-info\">\n                    <h2 className=\"movie-title\">\n                        {movie.title}\n                    </h2>\n                    <p className=\"release-date\">Release year: {movie.release_date.slice(0, 4)}</p>\n                    <p className=\"movie-overview\">{movie.overview}</p>\n                </div>\n\n            </div>\n        </Link>\n        ))\n  \n    return (\n        <div className=\"container-search\">\n            <form className=\"form\" onSubmit={searchMovies}>\n                <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n                <input \n                    className=\"search-input\" \n                    type=\"text\" \n                    name=\"query\"\n                    placeholder=\"i.e. Star Wars\" \n                    value={query} \n                    onChange={handleChange}\n                />\n                <button className=\"button-search\" type=\"submit\">Search</button>\n            </form>\n\n            <div className=\"search-results\">\n                {movieCards}\n            </div>    \n        </div>\n    )\n}\n\nexport default SearchMovies","import React, {useState, useEffect} from \"react\"\nimport {useParams, useHistory} from \"react-router-dom\"\n\nimport \"./MovieDetails.css\"\n\nconst MY_KEY = process.env.REACT_APP_API_KEY\n\n\nconst MovieDetails = () => {\n    const params = useParams()  \n    const movieId = parseInt(params.movieId)\n\n    const history = useHistory()\n\n    const [movie, setMovie] = useState([])\n\n    const getMovieDetails = async (event) => {\n        const url = `https://api.tmdb.org/3/movie/${movieId}?api_key=${MY_KEY}&language=en-US`;\n        \n        try {\n            const response = await fetch(url)\n            const data  = await response.json()\n            setMovie(data)\n        } catch(err) {\n            console.error(err)\n        }\n    }\n\n    useEffect(() => {\n        getMovieDetails()\n      }, []) \n\n      const handleClick = () => {history.goBack()}\n\n    return (\n        <div className=\"container-movie-details\">\n            \n            <div className=\"container-movie-backdrop\" style={{ \n            backgroundImage: `url(\"https://image.tmdb.org/t/p/w1000_and_h450_multi_faces${movie.backdrop_path}\")`\n          }}>\n\n                <img className=\"movie-poster poster-none\"\n                    src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                    alt={movie.title + \" poster\"}\n                />            \n            </div>\n            \n            \n            <div className=\"container-overview\">\n                <h2 className=\"title-movie-details\">{movie.original_title}</h2>\n                <h3 className=\"title-overview\">Overview</h3>\n                <p className=\"paragraph-overview\">{movie.overview}</p>\n                <button className=\"button-back\" type=\"button\" onClick={handleClick}>Back to search</button>\n            </div>\n\n        </div>\n        \n\n    )\n}\n\nexport default MovieDetails","import React, {useState} from \"react\"\n\nimport Header from \"./Header\"\nimport SearchMovies from \"./SearchMovies\"\nimport MovieDetails from \"./MovieDetails\"\n\nimport {Switch, Route, Link} from \"react-router-dom\"\n\nconst MY_KEY = process.env.REACT_APP_API_KEY\n\nconst App = () => {\n\n    const [query, setQuery] = useState(\"\")\n    const [movies, setMovies] = useState([])\n\n    const handleChange = event => {\n        return setQuery(event.target.value)\n    }\n\n    // Search movies\n    const searchMovies = async (event) => {\n        // prevent page reload after clicking Search button\n        event.preventDefault();\n        \n        // check if search field is empty\n        if (query) {\n            const url = `https://api.tmdb.org/3/search/movie?api_key=${MY_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n        \n        try {\n            const response = await fetch(url);\n            const data  = await response.json();\n            setMovies(data.results);\n        } catch(err) {\n            console.error(err);\n        }\n\n        // clear search field after clicking Search button\n        setQuery(\"\")\n        }\n    }\n\n    return (\n        <div>\n            <Link to={`/`}>\n                <Header />\n            </Link>\n            \n            <Switch>\n                    <Route exact path=\"/\">\n                        <div className=\"container\">\n                            <SearchMovies \n                                handleChange={handleChange}\n                                query={query}\n                                searchMovies={searchMovies}\n                                movies={movies}\n                            />\n                        </div>\n                    </Route>\n                    <Route exact path={`/:movieId`}>\n                        <MovieDetails />\n                    </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {BrowserRouter as Router, HashRouter} from \"react-router-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById(\"root\"))\n\n\n"],"sourceRoot":""}